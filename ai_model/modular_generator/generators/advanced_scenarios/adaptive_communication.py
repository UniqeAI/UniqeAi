"""
Adaptif ƒ∞leti≈üim Senaryosu
===========================

Bu mod√ºl, AI'nin adaptif ileti≈üim ve kullanƒ±cƒ± tercihlerine g√∂re ileti≈üim tarzƒ±nƒ± ayarlama becerilerini test eden senaryolar √ºretir.
Farklƒ± kullanƒ±cƒ± profillerine g√∂re ileti≈üim tarzƒ±nƒ± nasƒ±l deƒüi≈ütirdiƒüi test edilir.
"""

import uuid
import random
from typing import Dict, Any, List

from ...models import ScenarioType, CognitiveState, EmotionalContext
from ...utils.helpers import generate_user_id, create_validated_response

def generate_adaptive_communication_scenarios() -> List[Dict[str, Any]]:
    """
    50 adet uzman seviyesi adaptif ileti≈üim senaryosu √ºretir.
    """
    scenarios = []

    # 1. Sabƒ±rsƒ±z ve Teknik Bilgisi Y√ºksek Kullanƒ±cƒ±
    scenarios.append({
        "id": f"adaptive_comm_{uuid.uuid4().hex[:8]}",
        "scenario_type": ScenarioType.ADAPTIVE_COMMUNICATION.value,
        "personality_profile": "impatient_tech_savvy",
        "cognitive_state": CognitiveState.FOCUSED.value,
        "emotional_context": EmotionalContext.FRUSTRATED.value,
        "donguler": [
            {"rol": "kullanici", "icerik": "ƒ∞nternetim yine yava≈ü, hƒ±z testi yapƒ±n ve sonucu s√∂yleyin. Teknik detaylarla boƒümayƒ±n.", "arac_cagrilari": None},
            {"rol": "asistan", "icerik": "**Hƒ±zlƒ± Mod Aktif!** ‚ö°\nAnla≈üƒ±ldƒ±, hemen hƒ±z testi ba≈ülatƒ±yorum.", "arac_cagrilari": [
                {"fonksiyon": "test_internet_speed", "parametreler": {"user_id": generate_user_id()}}
            ]},
            {"rol": "arac", "icerik": create_validated_response("TestInternetSpeedResponse", {"download_speed_mbps": 12.5, "upload_speed_mbps": 2.1, "ping_ms": 45})},
            {"rol": "asistan", "icerik": "Hƒ±z testiniz tamamlandƒ±. ƒ∞ndirme: 12.5 Mbps, Y√ºkleme: 2.1 Mbps. Bu deƒüerler normalin altƒ±nda. Hemen arƒ±za kaydƒ± olu≈üturalƒ±m mƒ±?", "arac_cagrilari": None}
        ]
    })

    # 2. Ya≈ülƒ± ve Teknolojiden Anlamayan Kullanƒ±cƒ±
    scenarios.append({
        "id": f"adaptive_comm_{uuid.uuid4().hex[:8]}",
        "scenario_type": ScenarioType.ADAPTIVE_COMMUNICATION.value,
        "personality_profile": "elderly_non_tech",
        "cognitive_state": CognitiveState.CONFUSED.value,
        "emotional_context": EmotionalContext.ANXIOUS.value,
        "donguler": [
            {"rol": "kullanici", "icerik": "Evladƒ±m, bu fatura √ßok karƒ±≈üƒ±k. Ne kadar √∂deyeceƒüim ben ≈üimdi?", "arac_cagrilari": None},
            {"rol": "asistan", "icerik": "**Basit Anlatƒ±m Modu Aktif!** ‚òï\nMerhabalar teyzeciƒüim, hi√ß merak etmeyin, ben size yardƒ±mcƒ± olacaƒüƒ±m. Faturanƒ±zƒ± hemen kontrol ediyorum.", "arac_cagrilari": [
                {"fonksiyon": "get_current_bill", "parametreler": {"user_id": generate_user_id()}}
            ]},
            {"rol": "arac", "icerik": create_validated_response("GetCurrentBillResponse", {"amount": 85.50, "due_date": "2024-08-20"})},
            {"rol": "asistan", "icerik": "Toplam borcunuz 85.50 TL. Son √∂deme tarihiniz de 20 Aƒüustos. Ba≈üka bir konuda yardƒ±mcƒ± olabilir miyim?", "arac_cagrilari": None}
        ]
    })

    # 3. ≈û√ºpheci ve Detaycƒ± Kullanƒ±cƒ±
    scenarios.append({
        "id": f"adaptive_comm_{uuid.uuid4().hex[:8]}",
        "scenario_type": ScenarioType.ADAPTIVE_COMMUNICATION.value,
        "personality_profile": "skeptical_detail_oriented",
        "cognitive_state": CognitiveState.ANALYTICAL.value,
        "emotional_context": EmotionalContext.DISTRUSTFUL.value,
        "donguler": [
            {"rol": "kullanici", "icerik": "Paketimde ne kadar internet kaldƒ±ƒüƒ±nƒ± tam olarak GB ve MB cinsinden √∂ƒürenmek istiyorum. Bana yuvarlak rakamlar vermeyin.", "arac_cagrilari": None},
            {"rol": "asistan", "icerik": "**Detaylƒ± Bilgi Modu Aktif!** üîç\nTabii ki, kalan kullanƒ±m haklarƒ±nƒ±zƒ± en ince ayrƒ±ntƒ±sƒ±na kadar iletiyorum.", "arac_cagrilari": [
                {"fonksiyon": "get_remaining_quotas", "parametreler": {"user_id": generate_user_id()}}
            ]},
            {"rol": "arac", "icerik": create_validated_response("GetRemainingQuotasResponse", {"internet_remaining_gb": 15.7, "voice_remaining_minutes": 342, "sms_remaining": 876})},
            {"rol": "asistan", "icerik": "Kalan kullanƒ±m haklarƒ±nƒ±z tam olarak: 15.7 GB (yani 16076.8 MB) internet, 342 dakika konu≈üma ve 876 SMS. Bu veriler anlƒ±ktƒ±r.", "arac_cagrilari": None}
        ]
    })
    
    # ... (Buraya 47 senaryo daha eklenecek) ...

    # 50. Yurt Dƒ±≈üƒ±na √áƒ±kacak ve Endi≈üeli Kullanƒ±cƒ±
    scenarios.append({
        "id": f"adaptive_comm_{uuid.uuid4().hex[:8]}",
        "scenario_type": ScenarioType.ADAPTIVE_COMMUNICATION.value,
        "personality_profile": "anxious_traveler",
        "cognitive_state": CognitiveState.PLANNING.value,
        "emotional_context": EmotionalContext.WORRIED.value,
        "donguler": [
            {"rol": "kullanici", "icerik": "Yarƒ±n yurt dƒ±≈üƒ±na √ßƒ±kƒ±yorum ve faturamƒ±n √ßok y√ºksek gelmesinden korkuyorum. Ne yapmam lazƒ±m?", "arac_cagrilari": None},
            {"rol": "asistan", "icerik": "**G√ºven Verici Mod Aktif!** ‚úÖ\nEndi≈üelenmenize hi√ß gerek yok, yurt dƒ±≈üƒ± kullanƒ±mƒ±nƒ±z i√ßin en uygun √ß√∂z√ºmleri birlikte bulacaƒüƒ±z. Hattƒ±nƒ±zda yurt dƒ±≈üƒ± kullanƒ±m (roaming) aktif mi, hemen kontrol edelim.", "arac_cagrilari": [
                {"fonksiyon": "enable_roaming", "parametreler": {"user_id": generate_user_id(), "status": True}}
            ]},
            {"rol": "arac", "icerik": create_validated_response("EnableRoamingResponse", {"roaming_enabled": True, "daily_fee": 25.0})},
            {"rol": "asistan", "icerik": "Evet, hattƒ±nƒ±z yurt dƒ±≈üƒ± kullanƒ±mƒ±na a√ßƒ±k. S√ºrpriz faturalarla kar≈üƒ±la≈ümamanƒ±z i√ßin size √∂zel yurt dƒ±≈üƒ± paketlerimizi √∂nerebilirim. ƒ∞ster misiniz?", "arac_cagrilari": None}
        ]
    })
    
    return scenarios

# Bu ana fonksiyon, core_generator tarafƒ±ndan √ßaƒürƒ±lacak
def generate_adaptive_communication_scenario() -> Dict[str, Any]:
    """
    Havuzdan rastgele bir adaptif ileti≈üim senaryosu se√ßer ve d√∂nd√ºr√ºr.
    """
    all_scenarios = generate_adaptive_communication_scenarios()
    return random.choice(all_scenarios)
